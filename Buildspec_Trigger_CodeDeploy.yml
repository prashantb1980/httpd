version: 0.2
phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION   | docker login --username AWS --password-stdin $Account_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - |
        #!/bin/bash
        latesttag=$(aws ecr describe-images --repository-name httpd-image-repository --query 'imageDetails[*].imageTags[ * ]' --output text | sort -nr | head -n 1)
        addone=1
        if  [ -z "$latesttag" ]
        then
           echo new repository or no images found
           exit 10
        else
           echo existing repository
           NEW_IMAGE=$Account_ID.dkr.ecr.eu-west-1.amazonaws.com/httpd-image-repository:$latesttag
        fi 
      - |
        TASK_DEFINITION_ARN=$(aws ecs describe-services --services $Service --cluster $Cluster | jq -r .services[0].taskDefinition)

        TASK_DEFINITION=$(aws ecs describe-task-definition --task-def $TASK_DEFINITION_ARN | jq .taskDefinition )

        CURRENT_IMAGE=$(aws ecs describe-task-definition --task-def $TASK_DEFINITION_ARN | jq -r .taskDefinition.containerDefinitions[0].image  )
   
        NEW_TASK_DEFINITION=${TASK_DEFINITION//$CURRENT_IMAGE/$NEW_IMAGE}
        
        NEW_DEF_JQ_FILTER="family: .family, volumes: .volumes, containerDefinitions: .containerDefinitions, executionRoleArn: .executionRoleArn, networkMode: .networkMode "

        NEW_TASK_DEFINITION1=$(echo $NEW_TASK_DEFINITION | jq "{${NEW_DEF_JQ_FILTER}}")

        NEW_TASK_DEFINITION_ARN=$(aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEFINITION1" | jq -r .taskDefinition.taskDefinitionArn)

        UPDATE_SERVICE=$(aws ecs update-service --cluster $Cluster --service $Service --task-definition $NEW_TASK_DEFINITION_ARN)

        SERVICE_STABLE=$(aws ecs wait services-stable --cluster $Cluster --service $Service )


